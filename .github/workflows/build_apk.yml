name: Build GlowEQ Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-apk:
    name: Build GlowEQ Android APK
    runs-on: ubuntu-22.04

    steps:
      # 1️⃣ Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 2.1️⃣ Cache pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/buildozer.spec') }}
          restore-keys: ${{ runner.os }}-pip-

      # 3️⃣ Instalar dependências do sistema e Buildozer
      - name: Install Buildozer & system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip \
            build-essential libffi-dev libssl-dev autoconf automake libtool pkg-config \
            zlib1g-dev libncurses5-dev libreadline-dev libbz2-dev libexpat1-dev liblzma-dev
          # Definir JAVA_HOME explicitamente para OpenJDK 17 (evita default Java 11 do runner)
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          # Verificar versão do Java para debug
          java -version
          # Configurar default com update-alternatives para garantir consistência
          sudo update-alternatives --set java $JAVA_HOME/bin/java
          git --version
          pip install --upgrade pip
          pip install buildozer cython

      # 3.1️⃣ Instalar Android SDK + Build Tools corretamente
      - name: Install Android SDK and Build Tools
        run: |
          # Reforçar JAVA_HOME e PATH para este step (compatibilidade com SDK recente)
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          java -version  # Verificação para debug
          export ANDROID_HOME=/home/runner/Android/Sdk
          export ANDROIDSDK=$ANDROID_HOME
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
          unzip -q tools.zip
          # Mover conteúdo interno cmdline-tools para latest
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          mv cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
          # Atualizar PATH para sdkmanager
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          # Aceitar licenças (sem || true para falhar se necessário)
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
          # Instalar platform-tools, platforms e build-tools (atualizado para API 34)
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # 3.2️⃣ Cache Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: /home/runner/Android/Sdk
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('buildozer.spec') }}
          restore-keys: ${{ runner.os }}-android-sdk-

      # 3.3️⃣ Baixar Android NDK r25b
      - name: Download Android NDK r25b
        run: |
          export ANDROID_HOME=/home/runner/Android/Sdk
          export ANDROIDSDK=$ANDROID_HOME
          mkdir -p /home/runner/.buildozer/android/platform
          cd /home/runner/.buildozer/android/platform
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O ndk.zip
          unzip -q ndk.zip
          # Verificação: liste o conteúdo para debug
          ls -la
          # Verificar se o diretório foi criado corretamente
          if [ ! -d "android-ndk-r25b" ]; then
            echo "Erro: Diretório NDK não encontrado!"
            exit 1
          fi
          # Opcional: symlink para padronizar (Buildozer usa o caminho exato, mas ajuda em compatibilidade)
          ln -sf android-ndk-r25b android-ndk

      # 3.4️⃣ Cache Android NDK e Buildozer
      - name: Cache Android NDK and Buildozer
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.buildozer
          key: ${{ runner.os }}-buildozer-ndk-${{ hashFiles('buildozer.spec') }}
          restore-keys: ${{ runner.os }}-buildozer-ndk-

      # 4️⃣ Compilar APK
      - name: Build APK with Buildozer
        run: |
          # Reforçar JAVA_HOME e PATH para este step
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$JAVA_HOME/bin:$PATH
          java -version  # Verificação para debug
          export ANDROID_HOME=/home/runner/Android/Sdk
          export ANDROIDSDK=$ANDROID_HOME
          export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0"
          git --version  # Verificação explícita para debug
          # Verificação explícita do aidl para debug (com fallback)
          if [ -f "$ANDROID_HOME/build-tools/34.0.0/aidl" ]; then
            ls -la $ANDROID_HOME/build-tools/34.0.0/aidl
            aidl --version
          else
            echo "Warning: aidl not found in expected path"
          fi
          buildozer android debug
        env:
          ANDROIDSDK: /home/runner/Android/Sdk
          ANDROIDNDK: /home/runner/.buildozer/android/platform/android-ndk-r25b

      # 5️⃣ Upload APK gerado
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: GlowEQ-debug-apk
          path: bin/*.apk
